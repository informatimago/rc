# This is ssh client systemwide configuration file.  This file provides
# defaults for users, and the values can be changed in per-user configuration
# files or on the command line.
#
# Configuration data is parsed as follows:
#  1. command line options
#  2. user-specific file
#  3. system-wide file
# Any configuration value is only changed the first time it is set.
# Thus, host-specific definitions should be at the beginning of the
# configuration file, and defaults at the end.

# Host lenomdemonhote
#      HostName X.X.X.X
#      User     user
#      PKCS11Provider /usr/lib/x86_64-linux-gnu/opensc-pkcs11.so
#      ServerAliveInterval 15

Host 192.168.7.5?
    User linaro
    IdentityFile ~/.ssh/qorvo-dragon

Host 192.168.7.68
    User linaro
    IdentityFile ~/.ssh/qorvo-dragon

Host dragon*
    User linaro
    IdentityFile ~/.ssh/qorvo-dragon

Host db845c
    User linaro
    IdentityFile ~/.ssh/qorvo-dragon

Host salsa.debian.org
    HostName salsa.debian.org
    User                    informatimago
    IdentityFile            ~/.ssh/pjb-salsa-debian

Host gitlab.officeapps.sevenhugs.com
    HostName gitlab.officeapps.sevenhugs.com
    User                    pbourguignon
    IdentityFile            ~/.ssh/qorvo
    
Host proteus.sbde.fr
    HostName                proteus.sbde.fr
    User                    pjb
    IdentityFile            ~/.ssh/pjb-proteus-sbde@despina

Host proteus.sbde.fr
    HostName                proteus.sbde.fr
    User                    admin
    IdentityFile            ~/.ssh/pjb-proteus-sbde@despina

Host gitlab.sbde.fr
    HostName                gitlab.sbde.fr
    User                    git
    IdentityFile            ~/.ssh/sbde


Host github.com
    HostName                github.com
    User                    git
    IdentityFile            ~/.ssh/github

Host gist.github.com
    HostName                github.com
    User                    git
    IdentityFile            ~/.ssh/github

Host gitlab.com
    HostName                gitlab.com
    User                    git
    IdentityFile            ~/.ssh/gitlab

Host gitlab.sbde.fr
    HostName                gitlab.sbde.fr
    User                    git
    IdentityFile            ~/.ssh/sbde

Host proteus.sbde.fr
    HostName                proteus.sbde.fr
    User                    pjb
    IdentityFile            ~/.ssh/proteus-sbde

Host framagit.org
    HostName                framagit.org
    User                    git
    IdentityFile            ~/.ssh/framagit

Host git.framasoft.org
    HostName                git.framasoft.org
    User                    git
    IdentityFile            ~/.ssh/framagit

Host common-lisp.net
    HostName                common-lisp.net
    User                    git
    IdentityFile            ~/.ssh/gitlab.common-lisp.net

Host patchy+github.com
    HostName                github.com
    User                    git
    IdentityFile            ~/.ssh/patchymcpatchface-id_rsa

Host ubudu+github.com
    HostName                github.com
    User                    git
    IdentityFile            ~/.ssh/ubudu+id_rsa


Host vmdebian
    HostName                vmdebian
    User                    pjb
    IdentityFile            ~/.ssh/pjb-vmdebian@despina


# ----------------------------------------
# Default:

Host *
    Protocol                2,1
    Port                    22
    EscapeChar              ~
    ForwardAgent            no
    ForwardX11              no
    ForwardX11Trusted       no
    HostbasedAuthentication yes
#    RhostsRSAAuthentication yes
#    RSAAuthentication       yes
    PubkeyAuthentication    yes
    PasswordAuthentication  yes
    BatchMode               no
    CheckHostIP             yes
    StrictHostKeyChecking   ask
    Compression             yes
#   CompressionLevel        3
    KeepAlive               yes
    GatewayPorts            no

#    ServerAliveInterval     5


#     Empty lines and lines starting with `#' are comments.
#
#     Otherwise a line is of the format ``keyword arguments''.  Configuration
#     options may be separated by whitespace or optional whitespace and exactly
#     one `='; the latter format is useful to avoid the need to quote whites-
#     pace when specifying configuration options using the ssh, scp and sftp -o
#     option.
#
#     The possible keywords and their meanings are as follows (note that key-
#     words are case-insensitive and arguments are case-sensitive):
#
#     Host    Restricts the following declarations (up to the next Host key-
#         word) to be only for those hosts that match one of the patterns
#         given after the keyword.  `*' and `'?  can be used as wildcards
#         in the patterns.  A single `*' as a pattern can be used to pro-
#         vide global defaults for all hosts.  The host is the hostname
#         argument given on the command line (i.e., the name is not con-
#         verted to a canonicalized host name before matching).
#
#     AFSTokenPassing
#         Specifies whether to pass AFS tokens to remote host.  The argu-
#         ment to this keyword must be ``yes'' or ``no''.  This option
#         applies to protocol version 1 only.
#
#     BatchMode
#         If set to ``yes'', passphrase/password querying will be disabled.
#         This option is useful in scripts and other batch jobs where no
#         user is present to supply the password.  The argument must be
#         ``yes'' or ``no''.  The default is ``no''.
#
#     BindAddress
#         Specify the interface to transmit from on machines with multiple
#         interfaces or aliased addresses.  Note that this option does not
#         work if UsePrivilegedPort is set to ``yes''.
#
#     ChallengeResponseAuthentication
#         Specifies whether to use challenge response authentication.  The
#         argument to this keyword must be ``yes'' or ``no''.  The default
#         is ``yes''.
#
#     CheckHostIP
#         If this flag is set to ``yes'', ssh will additionally check the
#         host IP address in the known_hosts file.  This allows ssh to
#         detect if a host key changed due to DNS spoofing.  If the option
#         is set to ``no'', the check will not be executed.  The default is
#         ``yes''.
#
#     Cipher  Specifies the cipher to use for encrypting the session in proto-
#         col version 1.  Currently, ``blowfish-cbc'', ``3des'', and ``des''
#         are supported.  des is only supported in the ssh client for
#         interoperability with legacy protocol 1 implementations that do
#         not support the 3des cipher.  Its use is strongly discouraged due
#         to cryptographic weaknesses.  The default is ``3des''.
#
#     Ciphers
#         Specifies the ciphers allowed for protocol version 2 in order of
#         preference.  Multiple ciphers must be comma-separated.  The
#         default is
#
#           ``aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,arcfour,
#         aes192-cbc,aes256-cbc''
#
#     ClearAllForwardings
#         Specifies that all local, remote and dynamic port forwardings
#         specified in the configuration files or on the command line be
#         cleared.  This option is primarily useful when used from the ssh
#         command line to clear port forwardings set in configuration
#         files, and is automatically set by scp(1) and sftp(1).  The argu-
#         ment must be ``yes'' or ``no''.  The default is ``no''.
#
#     Compression
#         Specifies whether to use compression.  The argument must be
#         ``yes'' or ``no''.  The default is ``no''.
#
#     CompressionLevel
#         Specifies the compression level to use if compression is enabled.
#         The argument must be an integer from 1 (fast) to 9 (slow, best).
#         The default level is 6, which is good for most applications.  The
#         meaning of the values is the same as in gzip(1).  Note that this
#         option applies to protocol version 1 only.
#
#     ConnectionAttempts
#         Specifies the number of tries (one per second) to make before
#         exiting.  The argument must be an integer.  This may be useful in
#         scripts if the connection sometimes fails.  The default is 1.
#
#     DynamicForward
#         Specifies that a TCP/IP port on the local machine be forwarded
#         over the secure channel, and the application protocol is then
#         used to determine where to connect to from the remote machine.
#         The argument must be a port number.  Currently the SOCKS4 proto-
#         col is supported, and ssh will act as a SOCKS4 server.  Multiple
#         forwardings may be specified, and additional forwardings can be
#         given on the command line.  Only the superuser can forward privi-
#         leged ports.
#
#     EscapeChar
#         Sets the escape character (default: `~').  The escape character
#         can also be set on the command line.  The argument should be a
#         single character, `^' followed by a letter, or ``none'' to dis-
#         able the escape character entirely (making the connection trans-
#         parent for binary data).
#
#     ForwardAgent
#         Specifies whether the connection to the authentication agent (if
#         any) will be forwarded to the remote machine.  The argument must
#         be ``yes'' or ``no''.  The default is ``no''.
#
#         Agent forwarding should be enabled with caution.  Users with the
#         ability to bypass file permissions on the remote host (for the
#         agent's Unix-domain socket) can access the local agent through
#         the forwarded connection.  An attacker cannot obtain key material
#         from the agent, however they can perform operations on the keys
#         that enable them to authenticate using the identities loaded into
#         the agent.
#
#     ForwardX11
#         Specifies whether X11 connections will be automatically redi-
#         rected over the secure channel and DISPLAY set.  The argument
#         must be ``yes'' or ``no''.  The default is ``no''.
#
#         X11 forwarding should be enabled with caution.  Users with the
#         ability to bypass file permissions on the remote host (for the
#         user's X authorization database) can access the local X11 display
#         through the forwarded connection.  An attacker may then be able
#         to perform activities such as keystroke monitoring.
#
#     GatewayPorts
#         Specifies whether remote hosts are allowed to connect to local
#         forwarded ports.  By default, ssh binds local port forwardings to
#         the loopback address.  This prevents other remote hosts from con-
#         necting to forwarded ports.  GatewayPorts can be used to specify
#         that ssh should bind local port forwardings to the wildcard
#         address, thus allowing remote hosts to connect to forwarded
#         ports.  The argument must be ``yes'' or ``no''.  The default is
#         ``no''.
#
#     GlobalKnownHostsFile
#         Specifies a file to use for the global host key database instead
#         of /sw/etc/ssh/ssh_known_hosts.
#
#     HostbasedAuthentication
#         Specifies whether to try rhosts based authentication with public
#         key authentication.  The argument must be ``yes'' or ``no''.  The
#         default is ``no''.  This option applies to protocol version 2
#         only and is similar to RhostsRSAAuthentication.
#
#     HostKeyAlgorithms
#         Specifies the protocol version 2 host key algorithms that the
#         client wants to use in order of preference.  The default for this
#         option is: ``ssh-rsa,ssh-dss''.
#
#     HostKeyAlias
#         Specifies an alias that should be used instead of the real host
#         name when looking up or saving the host key in the host key
#         database files.  This option is useful for tunneling ssh connec-
#         tions or for multiple servers running on a single host.
#
#     HostName
#         Specifies the real host name to log into.  This can be used to
#         specify nicknames or abbreviations for hosts.  Default is the
#         name given on the command line.  Numeric IP addresses are also
#         permitted (both on the command line and in HostName specifica-
#         tions).
#
#     IdentityFile
#         Specifies a file from which the user's RSA or DSA authentication
#         identity is read. The default is $HOME/.ssh/identity for protocol
#         version 1, and $HOME/.ssh/id_rsa and $HOME/.ssh/id_dsa for proto-
#         col version 2.  Additionally, any identities represented by the
#         authentication agent will be used for authentication.  The file
#         name may use the tilde syntax to refer to a user's home direc-
#         tory.  It is possible to have multiple identity files specified
#         in configuration files; all these identities will be tried in
#         sequence.
#
#     KeepAlive
#         Specifies whether the system should send TCP keepalive messages
#         to the other side.  If they are sent, death of the connection or
#         crash of one of the machines will be properly noticed.  However,
#         this means that connections will die if the route is down tem-
#         porarily, and some people find it annoying.
#
#         The default is ``yes'' (to send keepalives), and the client will
#         notice if the network goes down or the remote host dies.  This is
#         important in scripts, and many users want it too.
#
#         To disable keepalives, the value should be set to ``no''.
#
#     KerberosAuthentication
#         Specifies whether Kerberos authentication will be used.  The
#         argument to this keyword must be ``yes'' or ``no''.
#
#     KerberosTgtPassing
#         Specifies whether a Kerberos TGT will be forwarded to the server.
#         This will only work if the Kerberos server is actually an AFS
#         kaserver.  The argument to this keyword must be ``yes'' or
#         ``no''.
#
#     LocalForward
#         Specifies that a TCP/IP port on the local machine be forwarded
#         over the secure channel to the specified host and port from the
#         remote machine.  The first argument must be a port number, and
#         the second must be host:port.  IPv6 addresses can be specified
#         with an alternative syntax: host/port.  Multiple forwardings may
#         be specified, and additional forwardings can be given on the com-
#         mand line.  Only the superuser can forward privileged ports.
#
#     LogLevel
#         Gives the verbosity level that is used when logging messages from
#         ssh.  The possible values are: QUIET, FATAL, ERROR, INFO, VER-
#         BOSE, DEBUG, DEBUG1, DEBUG2 and DEBUG3.  The default is INFO.
#         DEBUG and DEBUG1 are equivalent.  DEBUG2 and DEBUG3 each specify
#         higher levels of verbose output.
#
#     MACs    Specifies the MAC (message authentication code) algorithms in
#         order of preference.  The MAC algorithm is used in protocol ver-
#         sion 2 for data integrity protection.  Multiple algorithms must
#         be comma-separated.  The default is
#         ``hmac-md5,hmac-sha1,hmac-ripemd160,hmac-sha1-96,hmac-md5-96''.
#
#     NoHostAuthenticationForLocalhost
#         This option can be used if the home directory is shared across
#         machines.  In this case localhost will refer to a different
#         machine on each of the machines and the user will get many warn-
#         ings about changed host keys.  However, this option disables host
#         authentication for localhost.  The argument to this keyword must
#         be ``yes'' or ``no''.  The default is to check the host key for
#         localhost.
#
#     NumberOfPasswordPrompts
#         Specifies the number of password prompts before giving up.  The
#         argument to this keyword must be an integer.  Default is 3.
#
#     PasswordAuthentication
#         Specifies whether to use password authentication.  The argument
#         to this keyword must be ``yes'' or ``no''.  The default is
#         ``yes''.
#
#     Port    Specifies the port number to connect on the remote host.  Default
#         is 22.
#
#     PreferredAuthentications
#         Specifies the order in which the client should try protocol 2
#         authentication methods. This allows a client to prefer one method
#         (e.g.  keyboard-interactive) over another method (e.g.  password)
#         The default for this option is:
#         ``hostbased,publickey,keyboard-interactive,password''.
#
#     Protocol
#         Specifies the protocol versions ssh should support in order of
#         preference.  The possible values are ``1'' and ``2''.  Multiple
#         versions must be comma-separated.  The default is ``2,1''.  This
#         means that ssh tries version 2 and falls back to version 1 if
#         version 2 is not available.
#
#     ProxyCommand
#         Specifies the command to use to connect to the server.  The com-
#         mand string extends to the end of the line, and is executed with
#         /bin/sh.  In the command string, `%h' will be substituted by the
#         host name to connect and `%p' by the port.  The command can be
#         basically anything, and should read from its standard input and
#         write to its standard output.  It should eventually connect an
#         sshd(8) server running on some machine, or execute sshd -i some-
#         where.  Host key management will be done using the HostName of
#         the host being connected (defaulting to the name typed by the
#         user).  Setting the command to ``none'' disables this option
#         entirely.  Note that CheckHostIP is not available for connects
#         with a proxy command.
#
#     PubkeyAuthentication
#         Specifies whether to try public key authentication.  The argument
#         to this keyword must be ``yes'' or ``no''.  The default is
#         ``yes''.  This option applies to protocol version 2 only.
#
#     RemoteForward
#         Specifies that a TCP/IP port on the remote machine be forwarded
#         over the secure channel to the specified host and port from the
#         local machine.  The first argument must be a port number, and the
#         second must be host:port.  IPv6 addresses can be specified with
#         an alternative syntax: host/port.  Multiple forwardings may be
#         specified, and additional forwardings can be given on the command
#         line.  Only the superuser can forward privileged ports.
#
#     RhostsRSAAuthentication
#         Specifies whether to try rhosts based authentication with RSA
#         host authentication.  The argument must be ``yes'' or ``no''.
#         The default is ``no''.  This option applies to protocol version 1
#         only and requires ssh to be setuid root.
#
#     RSAAuthentication
#         Specifies whether to try RSA authentication.  The argument to
#         this keyword must be ``yes'' or ``no''.  RSA authentication will
#         only be attempted if the identity file exists, or an authentica-
#         tion agent is running.  The default is ``yes''.  Note that this
#         option applies to protocol version 1 only.
#
#     SmartcardDevice
#         Specifies which smartcard device to use. The argument to this
#         keyword is the device ssh should use to communicate with a smart-
#         card used for storing the user's private RSA key. By default, no
#         device is specified and smartcard support is not activated.
#
#     StrictHostKeyChecking
#         If this flag is set to ``yes'', ssh will never automatically add
#         host keys to the $HOME/.ssh/known_hosts file, and refuses to con-
#         nect to hosts whose host key has changed.  This provides maximum
#         protection against trojan horse attacks, however, can be annoying
#         when the /sw/etc/ssh/ssh_known_hosts file is poorly maintained,
#         or connections to new hosts are frequently made.  This option
#         forces the user to manually add all new hosts.  If this flag is
#         set to ``no'', ssh will automatically add new host keys to the
#         user known hosts files.  If this flag is set to ``ask'', new host
#         keys will be added to the user known host files only after the
#         user has confirmed that is what they really want to do, and ssh
#         will refuse to connect to hosts whose host key has changed.  The
#         host keys of known hosts will be verified automatically in all
#         cases.  The argument must be ``yes'', ``no'' or ``ask''.  The
#         default is ``ask''.
#
#     UsePrivilegedPort
#         Specifies whether to use a privileged port for outgoing connec-
#         tions.  The argument must be ``yes'' or ``no''.  The default is
#         ``no''.  If set to ``yes'' ssh must be setuid root.  Note that
#         this option must be set to ``yes'' if RhostsAuthentication and
#         RhostsRSAAuthentication authentications are needed with older
#         servers.
#
#     User    Specifies the user to log in as.  This can be useful when a dif-
#         ferent user name is used on different machines.  This saves the
#         trouble of having to remember to give the user name on the com-
#         mand line.
#
#     UserKnownHostsFile
#         Specifies a file to use for the user host key database instead of
#         $HOME/.ssh/known_hosts.
#
#     XAuthLocation
#         Specifies the full pathname of the xauth(1) program.  The default
#         is /usr/X11R6/bin/xauth.
#
# AddKeysToAgent yes
# UseKeyChain yes

# ----------------------------------------
# This is for Emacs.
# Local Variables:
# mode: shell-script
# End:

#### config                           -- 2004-03-14 00:38:09 -- pascal   ####
