# -*- mode:shell-script -*-
set +o posix

ulimit -n 2048 -u 1024

defaults write org.x.X11 enable_test_extensions -boolean true
defaults write org.macports.X11 enable_test_extensions -boolean true

export GRADLE_HOME="/opt/local/share/java/gradle"
# sudo port select --set maven maven2
# sudo port select --set maven maven31
# sudo port select --set python python27
# sudo port select --set python2 python27
# sudo bash -c 'cat /opt/local/etc/w3m/mailcap-dist>> /opt/local/etc/w3m/mailcap '
# sudo port select --set pip pip27

# if [ -f /opt/local/etc/profile.d/bash_completion.sh ]; then
#     . /opt/local/etc/profile.d/bash_completion.sh
# fi
# export PATH="/opt/local/libexec/gnubin:$PATH"

good_env=(COLUMNS
          DBUS_SESSION_BUS_ADDRESS
          DESKTOP_SESSION
          DISPLAY
          EDITOR
          HOME
          INPUTRC
          LC_ALL
          LC_CTYPE
          LD_LIBRARY_PATH
          LIBRARY_COMBO
          LOGNAME
          PAGER
          PATH
          PS1
          PWD
          PYTHONPATH
          QT_XFT
          REPLYTO
          SESSION_MANAGER
          SHELL
          SHLVL
          TERM
          TZ
          USER
          USERNAME
          VISUAL
          XAUTHORITY
          XDG_CURRENT_DESKTOP
          XDG_DATA_DIRS
          XDG_MENU_PREFIX
          XDG_RUNTIME_DIR
          XDG_SEAT
          XDG_SESSION_DESKTOP
          XDG_SESSION_ID
          XDG_VTNR
          GOTO_HOME
          CLEAR_HOME
          CLEAR_SCREEN)


function smallEnvironment(){
    env | sort | while read varval ; do
                     var=${varval/=*}
                     if member $var ${good_env[@]} >/dev/null  2>&1 ; then
                         echo ${var}=\'${varval/*=}\'
                     fi
                 done
}

function badEnvironment(){
    env | sort | while read varval ; do
                     var=${varval/=*}
                     if member $var ${good_env[@]} >/dev/null  2>&1 ; then
                         true
                     else
                         echo ${var}
                     fi
                 done
}

function cleanEnvironment(){
    badEnvironment | while read var ; do unset "${var}" ; done
}

grep -v -e "\<\($(joinWithSeparator "\|" $(badEnvironment))\)\>" < ~/.bash_env > ~/.bash_env_small
mv ~/.bash_env_small ~/.bash_env



CYAN_BACK=""
MAGENTA_BACK=""
BLUE_BACK=""
YELLOW_BACK=""
GREEN_BACK=""
RED_BACK=""
BLACK_BACK=""
WHITE_BACK=""
WHITE=""
CYAN=""
MAGENTA=""
BLUE=""
YELLOW=""
GREEN=""
RED=""
BLACK=""
NO_INVERT=""
NO_BLINK=""
NO_UNDERLINE=""
NO_BOLD=""
INVERT=""
BLINK=""
UNDERLINE=""
BOLD=""

export REPLYTO='Pascal J. Bourguignon <pascal.bourguignon@trustonic.com>'
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export ANDROID_SDK="$HOME/Library/Android/sdk"
export ANDROID_HOME="$ANDROID_SDK"
export ANDROID_NDK="$ANDROID_SDK/ndk-bundle"
export PATH="$ANDROID_SDK/platform-tools:$ANDROID_SDK/tools:$PATH"
export PATH="/usr/local/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:$PATH"
export PATH="$HOME/src/trustonic/bin:$PATH"


function connect-adb-device(){
    adb devices
    adb tcpip ${ANDROID_SERIAL/.*:/}
    sleep 2
    adb connect ${ANDROID_SERIAL}
    adb devices
}

function connect-nereid(){
    export ANDROID_SERIAL=192.168.2.182:5555
    connect-adb-device
}

function find-stuff(){
    local stuffname="$1" ; shift
    if [ $# -gt 0 ] ; then
        find "$@" -name "$stuffname" -print
    else
        find . -name "$stuffname" -print
    fi
}

function load-properties(){ eval "$(sed -e '/^#/d' -e "s/'/'\\\\''/g;s/^/'/;s/\$/'/" -e 's/^/export /' -e 's/$/;/' -e 's/env./env_/' <target/make.properties)" ; }
function find-workspaces(){ find-stuff '*.xcworkspace' ; }
function find-projects(){ find-stuff '*.xcodeproj' ; }
function find-dylibs(){ find-stuff '*.dylib' ; }
function find-libs(){ find-stuff '*.a' ; find-stuff '*.lib' ; }
function find-frameworks(){ find-stuff '*.framework' ; }
function find-file(){ find-stuff "${1?Missing file name argument}" ; }
function grep-all(){ find . \( -name Out -o -name .svn \) -prune -o -type f -exec grep -nH "${1?Missing regular expression argument}" {} \; ; }

function svn-remove-unregistered(){
    local trash
    trash="${TMPDIR-/tmp}/Trash/$UID/$$"
    mkdir -p "${trash}"
    svn status|awk  '/^\?/{print $2}'|while read item ; do mv "${item}" "${trash}" ; done
}

alias c='mvn compile'
alias cx='TERM=unix mvn -X -e compile -D TOOLCHAIN=NDK_ANDROID'

x="$HOME/src/xabber-android"

k="$HOME/src/trustonic/tbase/branches/dev_kinibi_wb_sdk"
ka="$HOME/src/trustonic/tbase/branches/dev_kinibi_wb_sdk/dev/components/Apps/Android/TrustChat/Locals/Code/TrustChat"
ki="$HOME/src/trustonic/tbase/branches/dev_kinibi_wb_sdk/dev/components/Apps/iOS/TrustChat/Locals/Code/TrustChat"
ks="$HOME/src/trustonic/tbase/branches/dev_kinibi_wb_sdk/dev/components/MobiCoreTools/TlSdk"


i="$HOME/src/trustonic/tbase/users/pasbou01/dev_kinibi_wb_sdk"
ndk10="$HOME/src/trustonic/tbase/users/pasbou01/dev_kinibi_wb_sdk/Common/AndroidNdk/r10e-linux-x86"
tlsdk="$HOME/src/trustonic/tbase/users/pasbou01/dev_kinibi_wb_sdk/dev/components/MobiCoreTools/TlSdk"
cliwb="$HOME/src/trustonic/tbase/users/pasbou01/dev_kinibi_wb_sdk/dev/components/MobiCoreDriver/Linux/ClientLibWB"
taaes="$HOME/src/trustonic/tbase/users/pasbou01/dev_kinibi_wb_sdk/dev/components/TrustedApplications/TAAes"
caaes="$HOME/src/trustonic/tbase/users/pasbou01/dev_kinibi_wb_sdk/dev/components/ClientApplications/CAAes"


function trustdirs(){
    for alias in c cx ; do
        alias $alias
    done
    for var in x k ka ki ks i is ; do
        printf "variable %-3s = %s\n" "${var}" "${!var}"
    done
}

export LM_LICENSE_FILE="8224@emea-meu-lic01.trustonic.internal"
export OBFUSCATE="no"

alias mvn='TERM=unix mvn'


alias from-mb='rsynch  macbook:/Users/pjb/src/trustonic/tbase/users/pasbou01/dev_kinibi_wb_sdk/ /home/pjb/src/trustonic/tbase/users/pasbou01/dev_kinibi_wb_sdk-macbook'
alias to-mb='rsynch  /home/pjb/src/trustonic/tbase/users/pasbou01/dev_kinibi_wb_sdk-macbook/ macbook:/Users/pjb/src/trustonic/tbase/users/pasbou01/dev_kinibi_wb_sdk'

function findNewestFileInTree(){
    if [[ "$(uname)" = "Darwin" ]] ; then
        # on MacOSX we have BSD find, which doesn't have -printf;
        # We still try find and gfind if in case GNU find is installed,
        # but we have to fallback to BSD find with stat:
        ( find "$@" -type f -printf "%T@ %p\n"  2>/dev/null \
        || gfind "$@" -type f -printf "%T@ %p\n"  2>/dev/null \
        || /usr/bin/find  "$@" -type f -exec /usr/bin/stat -f '%#m %N' {} \; )
    else
        find "$@" -type f -printf "%T@ %p\n"
    fi | sort -nr | head -n 1 | cut -d ' ' -f 2-
}

function findNewestFileInTree-txt(){
    if [[ "$(uname)" = "Darwin" ]] ; then
        # on MacOSX we have BSD find, which doesn't have -printf;
        # We still try find and gfind if in case GNU find is installed,
        # but we have to fallback to BSD find with stat:
        ( find "$@" -type f -name \*.txt -printf "%T@ %p\n"  2>/dev/null \
        || gfind "$@" -type f -name \*.txt -printf "%T@ %p\n"  2>/dev/null \
        || /usr/bin/find  "$@" -type f -name \*.txt -exec /usr/bin/stat -f '%#m %N' {} \; )
    else
        find "$@" -type f -name \*.txt -printf "%T@ %p\n"
    fi | sort -nr | head -n 20
}



function nwdb-count-entries(){
    local nwdb="${1?Missing nwdb file as first argument}"
    sqlite3 "${nwdb}" 'select count(*) from markers'
}

function nwdb-show-protection(){
    local nwdb="${1?Missing nwdb file as first argument}"
    local format='%-30s %s\n'
    local savedIFS="${IFS}"
    IFS='|'
    # shellcheck disable=SC2059
    sqlite3 "${nwdb}" 'select * from general' | \
        while read k v ; do
            if [[ "$k" = "created" ]] ; then
                printf "${format}" "$k" "$v"
                v="$( date -d @$((v/1000000)) )"
            fi
            printf "${format}" "$k" "$v"
        done
    IFS="${savedIFS}"
    # shellcheck disable=SC2059
    printf "${format}" "markerCount" "$(nwdb-count-entries "${nwdb}")"
}


#### THE END ####
