# -*- mode:shell-script -*-

good_env=(COLUMNS
          DBUS_SESSION_BUS_ADDRESS
          DESKTOP_SESSION
          DISPLAY
          EDITOR
          HOME
          INPUTRC
          LC_ALL
          LC_CTYPE
          LD_LIBRARY_PATH
          LIBRARY_COMBO
          LOGNAME
          PAGER
          PATH
          PS1
          PWD
          PYTHONPATH
          QT_XFT
          REPLYTO
          SESSION_MANAGER
          SHELL
          SHLVL
          TERM
          TZ
          USER
          USERNAME
          VISUAL
          XAUTHORITY
          XDG_CURRENT_DESKTOP
          XDG_DATA_DIRS
          XDG_MENU_PREFIX
          XDG_RUNTIME_DIR
          XDG_SEAT
          XDG_SESSION_DESKTOP
          XDG_SESSION_ID
          XDG_VTNR
          GOTO_HOME
          CLEAR_HOME
          CLEAR_SCREEN)


function smallEnvironment(){
    env | sort | while read varval ; do
                     var=${varval/=*}
                     if member $var ${good_env[@]} >/dev/null  2>&1 ; then
                         echo ${var}=\'${varval/*=}\'
                     fi
                 done
}

function badEnvironment(){
    env | sort | while read varval ; do
                     var=${varval/=*}
                     if member $var ${good_env[@]} >/dev/null  2>&1 ; then
                         true
                     else
                         echo ${var}
                     fi
                 done
}

function cleanEnvironment(){
    badEnvironment | while read var ; do unset ${var} ; done
}

grep -v -e "\<\($(joinWithSeparator "\|" $(badEnvironment))\)\>" < ~/.bash_env > ~/.bash_env_small
mv ~/.bash_env_small ~/.bash_env



CYAN_BACK=""
MAGENTA_BACK=""
BLUE_BACK=""
YELLOW_BACK=""
GREEN_BACK=""
RED_BACK=""
BLACK_BACK=""
WHITE_BACK=""
WHITE=""
CYAN=""
MAGENTA=""
BLUE=""
YELLOW=""
GREEN=""
RED=""
BLACK=""
NO_INVERT=""
NO_BLINK=""
NO_UNDERLINE=""
NO_BOLD=""
INVERT=""
BLINK=""
UNDERLINE=""
BOLD=""


export LANG=en_US.UTF-8
export ANDROID_SDK="$HOME/Library/Android/sdk"
export ANDROID_HOME="$ANDROID_SDK"
export ANDROID_NDK="$ANDROID_SDK/ndk-bundle"
export PATH="$ANDROID_SDK/platform-tools:$ANDROID_SDK/tools:$PATH"

function connect-adb-device(){
    adb devices
    adb tcpip ${ANDROID_SERIAL/.*:/}
    sleep 2
    adb connect ${ANDROID_SERIAL}
    adb devices
}

function connect-nereid(){
    export ANDROID_SERIAL=192.168.2.182:5555
    connect-adb-device
}

alias c='mvn compile'
alias cx='TERM=unix mvn -X -e compile -D TOOLCHAIN=NDK_ANDROID'

sb=$HOME/src/trustonic/tbase/branches/dev_kinibi_wb_sdk/dev/components/MobiCoreTools/TlSdk
si=$HOME/src/trustonic/tbase/users/pasbou01/ios/dev_kinibi_wb_sdk/dev/components/MobiCoreTools/TlSdk
x=$HOME/src/xabber-android

a=$HOME/src/trustonic/tbase/branches/dev_thp_mwc2016_demo/dev/components/Apps/Android/TrustChat/Locals/Code/TrustChat
i=$HOME/src/trustonic/tbase/branches/dev_thp_mwc2016_demo/dev/components/Apps/iOS/TrustChat/Locals/Code/TrustChat
l=$HOME/src/trustonic/tbase/branches/dev_thp_mwc2016_demo/dev/components/Apps/iOS/TrustChat/Locals/Code/TrustChat/Pods/Magnet-XMPPFramework/Vendor/libidn

function trustdirs(){
    for alias in c cx ; do
        alias $alias
    done
    for var in sb si x a i l ; do
        printf "variable %-3s = %s\n" "${var}" "${!var}"
    done
}

#### THE END ####
